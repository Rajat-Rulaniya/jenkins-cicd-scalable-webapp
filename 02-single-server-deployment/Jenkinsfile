pipeline {
    agent any

    environment {
        ANSIBLE_SSH_PRIVATE_KEY_FILE = credentials('ansible-flask-app')
    }

    stages {
        stage("Setup"){
            steps{
                sh '''
                cd 02-single-server-deployment
                python3 -m venv venv
                . venv/bin/activate
                pip install -r requirements.txt
                '''
            }
        }

        stage("Test"){
            steps{
                sh '''
                cd 02-single-server-deployment
                . venv/bin/activate
                pytest
                '''
            }
        }

        stage("Package Code"){
            steps {
                sh " zip -r ./02-single-server-deployment/ansible/myapp-build-${env.BUILD_NUMBER}.zip ./02-single-server-deployment/* -x '*.git*' -x 'ansible' -x 'venv'"
            }
        }

        stage("Deploy Code to App server") {
            steps {
                sh 'echo "$ANSIBLE_SSH_PRIVATE_KEY_FILE" > /tmp/base.pem'
                sh 'chmod 600 /tmp/base.pem'

                ansiblePlaybook(
                    playbook: './02-single-server-deployment/ansible/app_deploy.yml',
                    inventory: './02-single-server-deployment/ansible/hosts.ini',
                    extraVars: [
                        buildNumber: env.BUILD_NUMBER
                    ]
                )
            }
        }
    }

    post {
        always {
            sh "rm -f ./02-single-server-deployment/ansible/myapp-build-${env.BUILD_NUMBER}.zip || true"
            echo "Removed packaged zip file: myapp-build-${env.BUILD_NUMBER}.zip"
        }
    }
}